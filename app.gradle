apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

repositories {
    mavenCentral()
    mavenLocal()
    google()
    jcenter()
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation project(':wwwjdic')
    implementation 'com.google.firebase:firebase-analytics:17.2.2'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }

    dexOptions {
        preDexLibraries = false
    }

    signingConfigs {
        release {
            storeFile file("nick.keystore")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')

        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${archivesBaseName}-${variant.name}-${variant.versionName}.apk"
        }
    }

    lintOptions {
        checkReleaseBuilds true
        abortOnError false
    }

    afterEvaluate {
        generateReleaseBuildConfig.enabled = false
        generateDebugBuildConfig.enabled = false
    }
}

if (project.hasProperty('org_nick_storePassword')
        && project.hasProperty('org_nick_keyAlias')
        && project.hasProperty('org_nick_keyPassword')
        && project.hasProperty('org_nick_storeFile')) {
    android.signingConfigs.release.storeFile = file org_nick_storeFile
    android.signingConfigs.release.storePassword = org_nick_storePassword
    android.signingConfigs.release.keyAlias = org_nick_keyAlias
    android.signingConfigs.release.keyPassword = org_nick_keyPassword
}
